[devshell]
name = "flake-utils-plus"
packages = [
  "fd",
  "nixpkgs-fmt",
]

# Checks for fully featured example
[[commands]]
name = "nix-flake-check-ff"
help = "Run 'nix flake check'"
category = "checks (fully featured example)"
command = "cd $DEVSHELL_ROOT/examples/fully-featured && nix flake check ${@}"

[[commands]]
name = "nix-flake-show-ff"
help = "Run 'nix flake show'"
category = "checks (fully featured example)"
command = "cd $DEVSHELL_ROOT/examples/fully-featured && nix flake show ${@}"

[[commands]]
name = "nix-build-morty-ff"
help = "Build Morty configuration"
category = "checks (fully featured example)"
command = "cd $DEVSHELL_ROOT/examples/fully-featured && nix build .#nixosConfigurations.Morty.config.system.build.toplevel --dry-run"

[[commands]]
name = "nix-build-rick-ff"
help = "Build Rick configuration"
category = "checks (fully featured example)"
command = "cd $DEVSHELL_ROOT/examples/fully-featured && nix build .#someConfigurations.Rick.config.system.build.toplevel --dry-run"

# Checks for somewhat realistic example
[[commands]]
name = "nix-flake-check-sr"
help = "Run 'nix flake check'"
category = "checks (somewhat realistic example)"
command = "cd $DEVSHELL_ROOT/examples/somewhat-realistic && nix flake check ${@}"

[[commands]]
name = "nix-flake-show-sr"
help = "Run 'nix flake show'"
category = "checks (somewhat realistic example)"
command = "cd $DEVSHELL_ROOT/examples/somewhat-realistic && nix flake show ${@}"

[[commands]]
name = "nix-build-alice-sr"
help = "Build Alice configuration"
category = "checks (somewhat realistic example)"
command = "cd $DEVSHELL_ROOT/examples/somewhat-realistic && nix build .#nixosConfigurations.HostnameOne.config.system.build.toplevel --dry-run"

[[commands]]
name = "nix-build-carl-sr"
help = "Build Carl (darwin) configuration"
category = "checks (somewhat realistic example)"
command = "cd $DEVSHELL_ROOT/examples/somewhat-realistic && nix build .#darwinConfigurations.HostnameThree.config.system.build.toplevel --dry-run"

